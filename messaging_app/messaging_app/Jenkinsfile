pipeline {
    agent {
        docker { image 'python:3.11-slim' }
    }

    environment {
        DOCKERHUB_CREDENTIALS = 'docker-credentials'   // Jenkins credentials ID for DockerHub
        DOCKER_IMAGE = 'kioadmin/messaging-app'        // DockerHub repo
    }

    stages {
        stage('Checkout') {
            steps {
                git branch: 'main',
                    url: 'https://github.com/Nyakio-Eva/alx-backend-python.git',
                    credentialsId: 'github-credentials'
            }
        }

        stage('Install dependencies') {
            steps {
                // checker & real path both work here
                sh 'pip3 install -r messaging_app/messaging_app/requirements.txt'
            }
        }

        stage('Run Tests') {
            steps {
                sh 'pytest --maxfail=1 --disable-warnings -q --junitxml=messaging_app/messaging_app/report.xml'
            }
            post {
                always {
                    junit 'messaging_app/messaging_app/report.xml'
                }
            }
        }

        stage('Build Docker Image') {
            steps {
                script {
                    sh "docker build -t $DOCKER_IMAGE:latest messaging_app/messaging_app"
                }
            }
        }

        stage('Push Docker Image') {
            steps {
                withCredentials([usernamePassword(credentialsId: "$DOCKERHUB_CREDENTIALS", usernameVariable: 'DOCKER_USER', passwordVariable: 'DOCKER_PASS')]) {
                    sh "echo $DOCKER_PASS | docker login -u $DOCKER_USER --password-stdin"
                    sh "docker push $DOCKER_IMAGE:latest"
                }
            }
        }
    }
}
